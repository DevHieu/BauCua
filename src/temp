{/* <div className={isLogin ? "join_room hidden" : "join_room"}>
        <Login
          socket={socket}
          RoomId={setRoom}
          UserName={setName}
          isLogin={setIsLogin}
        />
      </div>
      <div className={!isLogin ? "gameDisplay hidden" : "gameDisplay"}>
        <div className="info-compu">
          <h4 onClick={handleOutGame} className="back">
            <IoMdArrowRoundBack size={20} /> Out room
          </h4>
          <h4 className="room">ID room: {room}</h4>
          <h4 className="money">money: {money}</h4>
          <h4 className="volume">
            audio:
            <input
              type="range"
              min="0"
              max="1"
              step="0.01"
              onChange={(value) => {
                handleVolume(value.target.value);
              }}
            ></input>
          </h4>
        </div>
        <div className="info-phone">
          <div
            className={sidebar ? "icon icon-extand" : "icon"}
            onClick={() => setSidebar(!sidebar)}
          >
            <CiMenuFries size={32} />
          </div>
          <div className={sidebar ? "crop invalid" : "crop"}></div>
          <div className={sidebar ? "sidebar extand" : "sidebar"}>
            <div className="container">
              <h4 onClick={handleOutGame} className="back">
                <IoMdArrowRoundBack size={20} /> Out room
              </h4>
              <h4 className="room">ID room: {room}</h4>
              <h4 className="money">money: {money}</h4>
              <h4 className="volume">
                audio:
                <input
                  type="range"
                  min="0"
                  max="1"
                  step="0.01"
                  onChange={(value) => {
                    handleVolume(value.target.value);
                  }}
                ></input>
              </h4>
            </div>
          </div>
        </div>
        <ScoreBoard socket={socket} roomId={room} shuffle={isShuffle} />
        <Table
          socket={socket}
          roomId={room}
          userName={name}
          choose={setChoose}
          money={money}
          setMoney={setMoney}
          clear={success}
          shuffle={isShuffle}
        />
        <Dice
          socket={socket}
          roomId={room}
          randomDices={setDices}
          shuffle={setIsShuffle}
          ShuffleSuccess={setSuccess}
        />
        <Chat socket={socket} roomId={room} userName={name} />
      </div> */}